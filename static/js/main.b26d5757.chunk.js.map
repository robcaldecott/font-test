{"version":3,"sources":["App.js","index.js"],"names":["App","useState","show","setShow","AppBar","Toolbar","variant","Typography","color","style","flexGrow","ThemeButton","edge","Container","padding","Grid","container","spacing","item","xs","Card","CardHeader","title","subheader","CardActions","Button","onClick","CardContent","map","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","AppWrapper","useAutoThemeMode","persistentMode","setPersistentMode","QueryClientProvider","client","locale","ThemeProvider","initialMode","onChangeMode","ReactDOM","render","document","getElementById"],"mappings":"ySA8DeA,MA/Cf,WACE,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,qCACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASC,QAAQ,QAAjB,UACE,cAACC,EAAA,EAAD,CAAYD,QAAQ,KAAKE,MAAM,UAAUC,MAAO,CAAEC,SAAU,GAA5D,wBAGA,cAACC,EAAA,EAAD,CAAaC,KAAK,aAGtB,cAACP,EAAA,EAAD,CAASC,QAAQ,UAEjB,cAACO,EAAA,EAAD,CAAWJ,MAAO,CAAEK,QAAS,QAA7B,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,WAAWC,UAAU,UACvC,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMvB,GAAQ,SAACD,GAAD,OAAWA,MAA1C,qCAOLA,GACC,cAACa,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,UACG,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMC,KAAI,SAACtB,GAAD,OACxC,cAACC,EAAA,EAAD,CAA0BD,QAASA,EAAnC,SACGA,GADcA,qBCzC/BuB,EAAc,IAAIC,IAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,sBAAsB,MAKtBC,EAAa,WACjB,MAA4CC,cAA5C,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,OACE,cAACC,EAAA,EAAD,CAAqBC,OAAQV,EAA7B,SACE,cAAC,IAAD,CAAcW,OAAO,KAArB,SACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CACEC,YAAaN,EACbO,aAAcN,EAFhB,SAIE,cAAC,EAAD,aAQZO,IAASC,OAAO,cAAC,EAAD,IAAgBC,SAASC,eAAe,W","file":"static/js/main.b26d5757.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Container,\n  Card,\n  CardActions,\n  CardHeader,\n  Button,\n  Grid,\n  CardContent,\n} from \"@material-ui/core\";\nimport { ThemeButton } from \"@keyloop/react-core\";\n\nfunction App() {\n  const [show, setShow] = useState(false);\n\n  return (\n    <>\n      <AppBar>\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\" style={{ flexGrow: 1 }}>\n            Test app 2\n          </Typography>\n          <ThemeButton edge=\"end\" />\n        </Toolbar>\n      </AppBar>\n      <Toolbar variant=\"dense\" />\n\n      <Container style={{ padding: \"1rem\" }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Card>\n              <CardHeader title=\"Test app\" subheader=\"Fonts\" />\n              <CardActions>\n                <Button onClick={() => setShow((show) => !show)}>\n                  Show second card\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n\n          {show && (\n            <Grid item xs={12}>\n              <Card>\n                <CardContent>\n                  {[\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"].map((variant) => (\n                    <Typography key={variant} variant={variant}>\n                      {variant}\n                    </Typography>\n                  ))}\n                </CardContent>\n              </Card>\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { IntlProvider } from \"react-intl\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider, useAutoThemeMode } from \"@keyloop/react-core\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nconst AppWrapper = () => {\n  const [persistentMode, setPersistentMode] = useAutoThemeMode();\n  return (\n    <QueryClientProvider client={queryClient}>\n      <IntlProvider locale=\"en\">\n        <Router>\n          <ThemeProvider\n            initialMode={persistentMode}\n            onChangeMode={setPersistentMode}\n          >\n            <App />\n          </ThemeProvider>\n        </Router>\n      </IntlProvider>\n    </QueryClientProvider>\n  );\n};\n\nReactDOM.render(<AppWrapper />, document.getElementById(\"root\"));\n"],"sourceRoot":""}